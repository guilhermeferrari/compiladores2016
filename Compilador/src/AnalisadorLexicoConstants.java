/* Generated By:JavaCC: Do not edit this line. AnalisadorLexicoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalisadorLexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NUMERO = 11;
  /** RegularExpression Id. */
  int STRING = 12;
  /** RegularExpression Id. */
  int NOMEVAR = 13;
  /** RegularExpression Id. */
  int ATRIB = 14;
  /** RegularExpression Id. */
  int EXIBE = 15;
  /** RegularExpression Id. */
  int LEIA = 16;
  /** RegularExpression Id. */
  int TIPONUM = 17;
  /** RegularExpression Id. */
  int TIPOSTRING = 18;
  /** RegularExpression Id. */
  int PARL = 19;
  /** RegularExpression Id. */
  int PARR = 20;
  /** RegularExpression Id. */
  int POT = 21;
  /** RegularExpression Id. */
  int MULT = 22;
  /** RegularExpression Id. */
  int DIV = 23;
  /** RegularExpression Id. */
  int ADD = 24;
  /** RegularExpression Id. */
  int SUB = 25;
  /** RegularExpression Id. */
  int MAIOR = 26;
  /** RegularExpression Id. */
  int MENOR = 27;
  /** RegularExpression Id. */
  int MAIORIGUAL = 28;
  /** RegularExpression Id. */
  int MENORIGUAL = 29;
  /** RegularExpression Id. */
  int DIFERENTE = 30;
  /** RegularExpression Id. */
  int COMPARA = 31;
  /** RegularExpression Id. */
  int E = 32;
  /** RegularExpression Id. */
  int OU = 33;
  /** RegularExpression Id. */
  int NAO = 34;
  /** RegularExpression Id. */
  int OUCC = 35;
  /** RegularExpression Id. */
  int SE = 36;
  /** RegularExpression Id. */
  int SENAOSE = 37;
  /** RegularExpression Id. */
  int SENAO = 38;
  /** RegularExpression Id. */
  int FIMSE = 39;
  /** RegularExpression Id. */
  int ESCOLHA = 40;
  /** RegularExpression Id. */
  int CASO = 41;
  /** RegularExpression Id. */
  int OUTROS = 42;
  /** RegularExpression Id. */
  int FIMESCOLHA = 43;
  /** RegularExpression Id. */
  int ENQUANTO = 44;
  /** RegularExpression Id. */
  int FIMENQUANTO = 45;
  /** RegularExpression Id. */
  int PARA = 46;
  /** RegularExpression Id. */
  int ATE = 47;
  /** RegularExpression Id. */
  int PASSO = 48;
  /** RegularExpression Id. */
  int FIMPARA = 49;
  /** RegularExpression Id. */
  int PTVIRG = 50;
  /** RegularExpression Id. */
  int VIRG = 51;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int comentarioCompleto = 1;
  /** Lexical state. */
  int comentarioLinha = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 7>",
    "\"//\"",
    "\"\\n\"",
    "<token of kind 10>",
    "<NUMERO>",
    "<STRING>",
    "<NOMEVAR>",
    "\"=\"",
    "\"exibe\"",
    "\"leia\"",
    "\"numero\"",
    "\"string\"",
    "\"(\"",
    "\")\"",
    "\"^\"",
    "\"*\"",
    "\"/\"",
    "\"+\"",
    "\"-\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"==\"",
    "\"e\"",
    "\"ou\"",
    "\"nao\"",
    "\"OU\"",
    "\"se\"",
    "\"senaoSe\"",
    "\"senao\"",
    "\"fimSe\"",
    "\"escolha\"",
    "\"caso\"",
    "\"outros\"",
    "\"fimEscolha\"",
    "\"enquanto\"",
    "\"fimEnquanto\"",
    "\"para\"",
    "\"ate\"",
    "\"passo\"",
    "\"fimPara\"",
    "\";\"",
    "\",\"",
  };

}
